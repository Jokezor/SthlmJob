# Få alla ifyllda kandidater

select * from users;
select * from person;
select * from recommendations;
select * from education;
select * from cvsummary;
select * from workexperience;

# Få alla olika tables
SELECT DISTINCT tablename
FROM pg_table_def
WHERE schemaname = 'public'
ORDER BY tablename;

# Få fram alla ifrån cvsummary men med villkor
select * from cvsummary
where yearsofexperience > 10
and salaryrange < 121000
order by yearsofexperience desc;



# Sätta in data
insert into languageskills (userid, lang, level)
 values (9, 'Svenska', 'Fluent');
insert into itskills (userid, itskill, yearsofexperience)
 values (11, 'C', 6);
 insert into businessskills (userid, businessskill, yearsofexperience)
 values (12, 'Bästa ekonomi', 6);
insert into person (userid, firstname, lastname, nationality, salutation, email)
 values (135, 'Joakim', 'Olovsson', 'Swedish', 'Male', 'thisidfstest@live.se');
insert into cvsummary values (11, 'engineer', 13, 'cto', 'google', 'cto, ceo, assistant regional manager', 'master', '100000', '23', '3','available', '2018-07-18', '', true, true);
insert into workexperience (userid, positiontitle, employer, startdate, enddate, description) values (10, 'cto', 'google', '2015-10-12', '2017-12-11', 'Hardworker');
insert into users (name, address, email, password) values ('Jokezor olovsson', 'asdfghjkl', 'thisidfstest@live.se', '7qb292c3r2');
insert into preferences (userid, job, branch)
 values (1, 'Controller', 'Business');
# Uppdatera data
UPDATE person SET city = 'Umeå'
where userid =11;

# Skapa tables
CREATE TABLE person
(
  userid            INT REFERENCES users (id) PRIMARY KEY,
  firstname         VARCHAR(30) NOT NULL,
  lastname          VARCHAR(30) NOT NULL,
  title             VARCHAR(50),
  nationality       VARCHAR(50),
  birthdate         DATE,
  salutation        VARCHAR(50),
  driverslicense    VARCHAR(50),
  telephonenumber   VARCHAR(25),
  mobilenumber      VARCHAR(20),
  email             VARCHAR(30),
  streetname        VARCHAR(50),
  streetnumber      INT,
  postcode          INT,
  city              VARCHAR(40),
  region            VARCHAR(50),
  country           VARCHAR(40),
  url               VARCHAR(100) # url till CV
);

CREATE TABLE cvsummary
(
  userid                  INT REFERENCES users (id) PRIMARY KEY,
  cvtitle                 VARCHAR(40),
  yearsofexperience       INT,
  currentposition         VARCHAR(50),
  currentemployer         VARCHAR(50),
  last3experiences        VARCHAR(300),
  highesteducationlevel   VARCHAR(30),
  salaryrange             integer,
  age                     integer,
  leavetime               integer,
  candidatestatus         VARCHAR(30),
  availability            VARCHAR(30),
  cvcomment               VARCHAR(500),
  pictureextracted        BOOL,
  permissiontostore       BOOL
)
CREATE TABLE education
(
  educationid         INT IDENTITY (1,1) PRIMARY KEY,
  userid              INT REFERENCES users (id),
  educationname       VARCHAR(100),
  diplomaobtained     VARCHAR(10),
  nameofinstitution   VARCHAR(60),
  degreedirection     VARCHAR(50),
  gradepointaverage   FLOAT,
  startdate           DATE,
  enddate             DATE
)
CREATE TABLE workexperience
(
  workexperienceid   INT IDENTITY (1,1) PRIMARY KEY,
  userid             INT REFERENCES users (id),
  positiontitle      VARCHAR(50),
  employer           VARCHAR(50),
  startdate          DATE,
  enddate            DATE,
  description        VARCHAR(1000)
);


CREATE TABLE itskills
(
  skillid             INT IDENTITY (1,1) PRIMARY KEY,
  userid              INT REFERENCES users (id),
  itskill             VARCHAR(30),
  yearsofexperience   VARCHAR(30)
);

CREATE TABLE preferences
(
  prefid              INT IDENTITY (1,1) PRIMARY KEY,
  userid              INT REFERENCES users (id),
  job                 VARCHAR(30),
  branch              VARCHAR(30)
);

Insert

CREATE TABLE languageskills
(
  skillid   INT IDENTITY (1,1)  PRIMARY KEY,
  userid    INT REFERENCES users (id),
  lang      VARCHAR(30),
  level     VARCHAR(30)
);

*/
CREATE TABLE softskills
(
  skillid   INT IDENTITY (1,1)  PRIMARY KEY,
  userid    INT REFERENCES users (id),
  skill      VARCHAR(100)
);
CREATE TABLE hobbies
(
  skillid   INT IDENTITY (1,1)  PRIMARY KEY,
  userid    INT REFERENCES users (id),
  skill      VARCHAR(100)
);
CREATE TABLE recommendations
(
  skillid   INT IDENTITY (1,1)  PRIMARY KEY,
  userid    INT REFERENCES users (id),
  skill      VARCHAR(100)
);

CREATE TABLE businessskills
(
  skillid             INT IDENTITY (1,1) PRIMARY KEY,
  userid              INT REFERENCES users (id),
  businessskill             VARCHAR(30),
  yearsofexperience   VARCHAR(30)
);

CREATE TABLE users
(
  id            INT IDENTITY (1,1) PRIMARY KEY,
  name          varchar(200),
  address       varchar(200),
  email         varchar(300),
  password      varchar(300)
)

# Se tid mellan två datum för att få erfarenhet inom en roll vid insättning i databas.
DATEDIFF(hours, start, end) / 24;
https://stackoverflow.com/questions/25973099/time-difference-in-redshift?utm_medium=organic&utm_source=google_rich_qa&utm_campaign=google_rich_qa
